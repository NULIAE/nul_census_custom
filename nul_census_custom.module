<?php

/**
 * Census Tab Content Types
 * @param  string $format format to return array in
 * @return array        of census tab data
 */
function nul_census_custom_tab_info($format) {
  $tabFields = array(
    'field_tab_1_contact_information' => array(
      'type' => "contact_information",
      'title' => "Contact Information",
    ),
    'field_tab_2_service_areas' => array(
      'type' => "service_areas",
      'title' => "Service Areas",
    ),
    'field_tab_3_community_relations' => array(
      'type' => "community_relations",
      'title' => "Community Relations",
    ),
    'field_tab_4_employees_and_board_' => array(
      'type' => "employees_and_board_members",
      'title' => "Employees and Board Members",
    ),
    'field_tab_5_budget' => array(
      'type' => "revenue",
      'title' => "Revenue",
    ),
    'field_tab_6_expenditures' => array(
      'type' => "expenditures",
      'title' => "Expenditures",
    ),
    'field_tab_13_civic_engagement' => array(
      'type' => "civic_engagement",
      'title' => "Civic Engagement",
    ),
    'field_tab_14_emergency_relief_ac' => array(
      'type' => "emergency_relief_activities",
      'title' => "Emergency Relief Activities",
    ),
    'field_tab_15_contact_data_direct' => array(
      'type' => "contact_data_direct_indirect_pub",
      'title' => "Contact Data (Direct, Indirect & Public)",
    ),
    'field_tab_16_empowerment' => array(
      'type' => "empowerment",
      'title' => "Empowerment",
    ),
    'field_tab_17_volunteers_members' => array(
      'type' => "volunteers_members",
      'title' => "Volunteers/Members",
    ),
    'field_tab_18_survey_certificatio' => array(
      'type' => "survey_certification",
      'title' => "Survey Certification",
    ),
  );
  if ($format == 'all') {
    return $tabFields;
  }
}

/**
 * hook_node_view()
 */
function nul_census_custom_node_view($node, $view_mode, $langcode) {
  $tabFields = nul_census_custom_tab_info('all');
  // if on the main census node check to see if the related tabs are populated, if not create a related node of that content type and assign it
  if ($node->type == 'test_clean_census') {
    // check if any tabs are set up yet
    foreach ($tabFields as $field => $values) {
      // TODO also check in database if there is a tab node that references this census node
      if (!empty($node->$field)) {
        unset($tabFields[$field]);
      }
    }
    // If any tabs need to be set up do so here
    if (!empty($tabFields)) {
      $thisNode = node_load($node->nid);
      foreach ($tabFields as $field => $values) {
        $tabNodeId = nul_census_custom_node_create($node->nid, $tabFields[$field]['type'], $tabFields[$field]['title']);
        $thisNode->{$field}[LANGUAGE_NONE][] = array(
          'target_id' => $tabNodeId,
          'target_type' => 'node',
        );
      }
      node_save($thisNode);
      $path = current_path();
      drupal_goto($path);
    }
  }
  else {
    // Check permissions, if do not have permission to edit complete tabs hide edit button
    foreach ($tabFields as $field => $values) {
      if ($node->type == $values['type']) {
        // Add css file to tab in view mode
        $form['#attached']['css'] = array(
          drupal_get_path('module', 'nul_census_custom') . '/css/editForm.css',
        );
        if (!empty($node->field_tab_status[LANGUAGE_NONE][0]['tid']) && $node->nid == arg(1) && $node->type !== 'test_clean_census') {
          $canEdit = nul_census_custom_check_tabstatus_permisions($node->field_tab_status[LANGUAGE_NONE][0]['tid']);
          if (!$canEdit) {
            drupal_add_js(drupal_get_path('module', 'nul_census_custom') . '/js/hideEdit.js');
            drupal_set_message("You do not have permission to edit this content at this stage", 'error');
          }
        }
      }
      // If on emergency_relief_activities view mode run this js to fix up table styling
      if ($node->type == 'emergency_relief_activities') {
        drupal_add_js(drupal_get_path('module', 'nul_census_custom') . '/js/formFix.js');
      }
    }
  }
}

/**
 * function to create related tabs
 * @param  int $censusId  nid of census the node is related to
 * @param  string $type     type of node being created
 * @param  string $title    title of node being created
 * @return int           node id of node created
 */
function nul_census_custom_node_create($censusId, $type, $title) {
  global $user;

  $node = new stdClass();
  $node->title = $title;
  $node->type = $type;
  // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().
  node_object_prepare($node);
  $node->language = LANGUAGE_NONE;
  $node->uid = $user->uid;
  //(1 or 0): published or not
  $node->status = 1;
  //(1 or 0): promoted to front page
  $node->promote = 0;
  // 0 = comments disabled, 1 = read only, 2 = read/write
  $node->comment = 2;

  // Entity reference field
  $node->field_census_id[$node->language][] = array(
    'target_id' => $censusId,
    'target_type' => 'node',
  );
  // Term reference (taxonomy) field
  $node->field_tab_status[$node->language][]['tid'] = 10;

  $node = node_submit($node);
  // Prepare node for saving
  node_save($node);
  return $node->nid;
}

/**
 * hook_form_alter()
 */
function nul_census_custom_form_alter(&$form, &$form_state, $form_id) {
  $tabFields = nul_census_custom_tab_info('all');
  // Setting up new censuss
  if (!empty($form['#node']->type)) {
    // Add css file to tab in edit mode
    $form['#attached']['css'] = array(
      drupal_get_path('module', 'nul_census_custom') . '/css/editForm.css',
    );
    if (arg(0) == 'node' && arg(1) == 'add' && arg(2) == 'test-clean-census' && arg(3) >= 1) {
      $year = date("Y");
      //TODO look up contact org name of arg(3) and print instead of id
      // Update and disable title field
      $form['title']['#default_value'] = arg(3) . " " . $year . " Census";
      $form['title']['#disabled'] = TRUE;
      // Update Year field and hide
      $form['field_year'][LANGUAGE_NONE][0]['value']['#default_value'] = $year;
      $form['field_year']['#type'] = 'hidden';
      // Update affliate field and hide it
      $form['field_affiliate_'][LANGUAGE_NONE][0]['value']['#default_value'] = arg(3);
      $form['field_affiliate_']['#type'] = 'hidden';

      // get all tab fields if they are unpopulated hide them (on new census node should all be empty)
      foreach ($tabFields as $tabField => $values) {
        // hide fields to pick entity references
        if (empty($form[$tabField][LANGUAGE_NONE][0]['value']['#default_value'])) {
          $form[$tabField]['#type'] = 'hidden';
        }
      }
    }
    // make tooltips for all fields (most important for table fields)
    foreach ($form as $key => $value) {
      if (substr($key, 0, 6) == 'field_') {
        if (!empty($form[$key][LANGUAGE_NONE][0]['value']['#title'])) {
          $form[$key]['#attributes']['title'] = $form[$key][LANGUAGE_NONE][0]['value']['#title'];
        }
      }
    }
    // Permissioning on census tab content types in edit mode (also checks its not in comment mode)
    foreach ($tabFields as $field => $values) {
      // hide title field on cenus tab content types in edit mode
      $form['title']['#disabled'] = TRUE;
      $form['title']['#type'] = 'hidden';
      // load totaling js
      drupal_add_js(drupal_get_path('module', 'nul_census_custom') . '/js/totaling.js');

      if (!empty($form['#node']->field_tab_status[LANGUAGE_NONE][0]['tid']) && $form['#node']->type == $values['type'] && substr($form_id, 0, 7) !== 'comment') {
        $canEdit = nul_census_custom_check_tabstatus_permisions($form['#node']->field_tab_status[LANGUAGE_NONE][0]['tid']);
        // If can't edit redirect to node in view mode.
        if (!$canEdit) {
          if (arg(0) == 'node' && arg(2) == 'edit') {
            drupal_goto(arg(0) . '/' . arg(1));
          }
          else {
            drupal_goto('403');
          }
        }
      }
    }
  }
}

/**
 * Implements hook_permission().
 */
function nul_census_custom_permission() {
  // TODO add permissions for tabs view/edit based on status
  return array(
    'edit census tabs with status submitted reviewed complete or review complete' => array(
      'title' => t('Edit census tabs with status submitted, complete, reviewed or review complete'),
      'description' => t('Allows a user to edit census tabs with status complete, submitted, reviewed or review complete.'),
    ),
    'edit census tabs with status resubmit' => array(
      'title' => t('Edit census tabs with status resubmit'),
      'description' => t('Allows a user to edit census tabs with status rresubmit.'),
    ),
  );
}

/**
 * Check permissions of user and status of tab
 * @param  int $status status of tab
 * @return boolean        can they edit or not
 */
function nul_census_custom_check_tabstatus_permisions($status) {
  global $user;
  // IF user is an administrator they can edit whatever always
  if (in_array('administrator', $user->roles)) {
    $canEdit = TRUE;
  }
  // If user is not admin check permissions
  if (!in_array('administrator', $user->roles)) {
    switch ($status) {
      // Incomplete
      case 10:
        $canEdit = TRUE;
        break;

      // Complete
      case 11:
        if (user_access('edit census tabs with status submitted reviewed complete or review complete')) {
          $canEdit = TRUE;
        }
        else {
          $canEdit = FALSE;
        }
        break;

      // Resubmit
      case 13:
        if (user_access('edit census tabs with status resubmit')) {
          $canEdit = TRUE;
        }
        else {
          $canEdit = FALSE;
        }
        break;

      // Reviewed
      case 14:
        if (user_access('edit census tabs with status submitted reviewed complete or review complete')) {
          $canEdit = TRUE;
        }
        else {
          $canEdit = FALSE;
        }
        break;

      // Reviewed Complete
      case 15:
        if (user_access('edit census tabs with status submitted reviewed complete or review complete')) {
          $canEdit = TRUE;
        }
        else {
          $canEdit = FALSE;
        }
        break;

      // Submitted
      case 12:
        if (user_access('edit census tabs with status submitted reviewed complete or review complete')) {
          $canEdit = TRUE;
        }
        else {
          $canEdit = FALSE;
        }
        break;

      default:
        $canEdit = FALSE;

        break;
    }
  }
  return $canEdit;
}
